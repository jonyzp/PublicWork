/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI_FlightSystem;

/**
 *
 * @author JONATHAN
 */

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import negocio.CiudadesN;

/**
 *
 * @author jossava
 */
public class Ciudades extends javax.swing.JFrame {

    CiudadesN ciuNegocio;
    ResultSet rs;
    
    MenuPrincipal mP;
    
    /**
     * Constructor
     */
    public Ciudades(Connection conexion, MenuPrincipal mp){
        initComponents();
        
        ciuNegocio = new CiudadesN(conexion);
        rs=null;
        
        mP = mp;
        
        this.setVisible(true);
        
        limpiarCampos();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH); 
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtid_ciudad = new javax.swing.JTextField();
        txtciudad = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButtonBuscar = new javax.swing.JButton();
        jButtonAgregar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonModificar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonAtras = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel8.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        jLabel8.setText("Ciudades");

        jLabel1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel1.setText("CÃ³digo Ciudad");

        txtid_ciudad.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtid_ciudad.setName("txtid_ciudad"); // NOI18N

        txtciudad.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel2.setText("Nombre Ciudad");

        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jButtonAgregar.setText("Agregar");
        jButtonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jButtonModificar.setText("Modificar");
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Codigo", "Nombre"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButtonAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/atras.png"))); // NOI18N
        jButtonAtras.setMaximumSize(new java.awt.Dimension(50, 40));
        jButtonAtras.setMinimumSize(new java.awt.Dimension(50, 40));
        jButtonAtras.setPreferredSize(new java.awt.Dimension(58, 34));
        jButtonAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtrasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(163, 163, 163)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(101, 101, 101)
                        .addComponent(jButtonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 99, Short.MAX_VALUE)
                        .addComponent(jButtonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(103, 103, 103)
                        .addComponent(jButtonModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(104, 104, 104)
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(250, 250, 250))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButtonAtras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(484, 484, 484)
                .addComponent(jLabel8)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(300, 300, 300)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtciudad, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtid_ciudad, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel8)
                        .addGap(39, 39, 39)
                        .addComponent(txtid_ciudad, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(txtciudad, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(jLabel1)
                        .addGap(17, 17, 17)
                        .addComponent(jLabel2))
                    .addComponent(jButtonAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(161, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if(validarCampos("buscar")){
            if(!txtid_ciudad.isEditable() && !txtciudad.getText().equals("")){ 
                rs=ciuNegocio.buscarCiudades(txtciudad.getText());
                actualizarTabla(rs);
            }
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        if(validarCampos("agregar")){
            String nombreciudad = txtciudad.getText();
            if(nombreciudad.equals("")){
                JOptionPane.showMessageDialog(null, "No se pudo insertar la ciudad");
            }else{
                if (ciuNegocio.insertarCiudades(nombreciudad)) {
                    actualizar();
                    JOptionPane.showMessageDialog(null, "Se ha insertado la ciudad");
                }
            }
            limpiarCampos();
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        if(txtid_ciudad.isEditable() && !txtciudad.isEditable()){
            int id_ciudad=0;
            if(txtid_ciudad.getText().equals("") ){
                JOptionPane.showMessageDialog(null, "No hay ciudad por eliminar o faltan datos.");
                return;
            }else{
                try{
                    id_ciudad = Integer.parseInt(txtid_ciudad.getText());
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "No se encontrÃ³ la ciudad a eliminar");
                    return;
                }
                if(ciuNegocio.eliminarCiudades(id_ciudad)){
                    actualizar();
                    JOptionPane.showMessageDialog(null, "Se ha eliminado la ciudad");
                    limpiarCampos();
                } else {
                    JOptionPane.showMessageDialog(null, "No se pudo eliminar la ciudad");
                }
            }
            
        }else{
            txtid_ciudad.setEditable(true);
            txtciudad.setText("");
            txtciudad.setEditable(false);
        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        if(txtid_ciudad.isEditable() && txtciudad.isEditable()){
            int id_ciudad=0;
            if(txtid_ciudad.getText().equals("")){
                JOptionPane.showMessageDialog(null, "No hay ciudad por modificar o faltan datos.");
                return;
            }else{
                try{
                    id_ciudad = Integer.parseInt(txtid_ciudad.getText());
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "No se encontrÃ³ la ciudad a modificar");
                    return;
                }
                
                String nombreciudad = txtciudad.getText();
                if (ciuNegocio.modificarCiudades(id_ciudad, nombreciudad)) {
                    actualizar();
                    JOptionPane.showMessageDialog(null, "Se ha modificado la ciudad");
                    limpiarCampos();
                } else {
                    JOptionPane.showMessageDialog(null, "No se pudo modificar la ciudad");
                }
            }
        }else{
            txtid_ciudad.setEditable(true);
            txtciudad.setEditable(true);
            return;
        }
        
    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiarCampos();
        actualizar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void jButtonAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtrasActionPerformed
        mP.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonAtrasActionPerformed
    
    public void actualizar(){
        rs=ciuNegocio.getDataSet();
        actualizarTabla(rs);
    }
    
    public void actualizarTabla(ResultSet rs){
        try{
            cleanJTable();
            int i = 0;
            while (rs.next()) {
                jTable1.setValueAt(rs.getInt(1), i, 0);   
                jTable1.setValueAt(rs.getString(2), i, 1);                   
                i++;
            }
            if(i==0)
                JOptionPane.showMessageDialog(null, "No hay datos por mostrar."); 

        }catch(SQLException se) {
            se.printStackTrace();
        }
    }
    
    public void cleanJTable(){
        for(int i=0 ; i<jTable1.getRowCount() ; i++){
            for(int j=0 ; j<jTable1.getColumnCount() ; j++){
                jTable1.setValueAt("", i, j);
            }
        }
    }

    public boolean validarCampos(String accion){
        if(!txtciudad.isEditable()){
            txtciudad.setEditable(true);
            return false;
        }
        if(txtid_ciudad.isEditable()){
            txtid_ciudad.setText("");
            txtid_ciudad.setEditable(false);
            return false;
        }
        if(txtciudad.getText().equals("")){
            JOptionPane.showMessageDialog(null, "No se pudo " + accion + " la ciudad, el campo Nombre de ciudad estÃ¡ vacÃ­o."); 
            return false;
        }
        return true;
    }
    
    public void limpiarCampos() {
        txtid_ciudad.setText("");
        txtciudad.setText("");
        txtciudad.setEditable(false);
        txtid_ciudad.setEditable(false);        
        actualizar();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton jButtonAgregar;
    private javax.swing.JButton jButtonAtras;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtciudad;
    private javax.swing.JTextField txtid_ciudad;
    // End of variables declaration//GEN-END:variables
}
