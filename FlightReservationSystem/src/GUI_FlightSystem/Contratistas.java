/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI_FlightSystem;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import negocio.ContratistasN;

/**
 *
 * @author JONATHAN
 * @author jossava
 */
public class Contratistas extends javax.swing.JFrame {

    ContratistasN contNegocio;
    ResultSet rs;
    
    MenuPrincipal mP;
    
    /**
     * Constructor
     */
    public Contratistas(Connection conexion, MenuPrincipal mp) {
        initComponents();
        contNegocio = new ContratistasN(conexion);
        rs=null;
        
        mP = mp;
        
        this.setVisible(true);
        
        limpiarCampos();
        cargarTiposContrEnCbx();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblubicaciones = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldID = new javax.swing.JTextField();
        jTextFieldnombre = new javax.swing.JTextField();
        jButtonBuscar = new javax.swing.JButton();
        jButtonAgregar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonModificar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonAtras = new javax.swing.JButton();
        jComboBoxTipoContr = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblubicaciones.setFont(new java.awt.Font("L M Roman Demi10", 1, 48)); // NOI18N
        lblubicaciones.setForeground(new java.awt.Color(1, 1, 1));
        lblubicaciones.setText("Contratista");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Identificación:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Nombre:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Tipo de Contratista:");

        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarbtnBuscarActionPerformed(evt);
            }
        });

        jButtonAgregar.setText("Agregar");
        jButtonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarbtnAgregarActionPerformed(evt);
            }
        });

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jButtonModificar.setText("Modificar");
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Identificación", "Tipo de Contratista", "Nombre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButtonAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/atras.png"))); // NOI18N
        jButtonAtras.setMaximumSize(new java.awt.Dimension(50, 40));
        jButtonAtras.setMinimumSize(new java.awt.Dimension(50, 40));
        jButtonAtras.setPreferredSize(new java.awt.Dimension(58, 34));
        jButtonAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtrasActionPerformed(evt);
            }
        });

        jComboBoxTipoContr.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- - -" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldID)
                            .addComponent(jTextFieldnombre)
                            .addComponent(jComboBoxTipoContr, 0, 798, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonAtras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(462, 462, 462)
                        .addComponent(lblubicaciones))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1087, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(126, 126, 126)
                                .addComponent(jButtonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(142, 142, 142)
                                .addComponent(jButtonModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(121, 121, 121)
                                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(158, 158, 158))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblubicaciones))
                    .addComponent(jButtonAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldnombre)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBoxTipoContr)
                        .addGap(1, 1, 1))
                    .addComponent(jLabel3))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBuscarbtnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarbtnBuscarActionPerformed
        if(validarQueSePuedeBuscar()){
            if(!jTextFieldID.isEditable() && !jTextFieldnombre.getText().equals("")){
                rs=contNegocio.retrieve(jTextFieldnombre.getText());
                actualizarTabla(rs);
            }
        }
    }//GEN-LAST:event_jButtonBuscarbtnBuscarActionPerformed

    private void jButtonAgregarbtnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarbtnAgregarActionPerformed
        if(validarQueSePuedeGuardar()){
            String idcontr= jTextFieldID.getText();
            String tipocontr = jComboBoxTipoContr.getSelectedItem().toString();
            String nombrecontr = jTextFieldnombre.getText();
            
            if (contNegocio.insert(idcontr, tipocontr, nombrecontr)) {
                JOptionPane.showMessageDialog(null, "Se ha insertado el contratista.");
            }else{
                JOptionPane.showMessageDialog(null, "No se pudo insertar el contratista.");                    
            }
            
            actualizar();
            limpiarCampos();
        }
    }//GEN-LAST:event_jButtonAgregarbtnAgregarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        jComboBoxTipoContr.setSelectedIndex(0);
        if(jTextFieldID.isEditable() && !jTextFieldnombre.isEditable()){
            String identificacion=jTextFieldID.getText();
            if(identificacion.equals("") ){
                JOptionPane.showMessageDialog(null, "No hay contratista por eliminar o faltan datos.");
                return;
            }else{
                if(contNegocio.delete(identificacion)){
                    actualizar();
                    JOptionPane.showMessageDialog(null, "Se ha eliminado el contratista.");
                    limpiarCampos();
                } else {
                    JOptionPane.showMessageDialog(null, "No se pudo eliminar el contratista."+'\n'
                            + "Puede estar eliminando un dato que no se puede eliminar"+'\n'
                            + "debido a que otro registro en otra tabla depende de él.");
                }
            }
        }else{
            jTextFieldID.setEditable(true);
            jTextFieldnombre.setText("");
            jTextFieldnombre.setEditable(false);
        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        if(jTextFieldID.isEditable() && jTextFieldnombre.isEditable()){
            String id_categoria=jTextFieldID.getText();
            String nombrecategoria = jTextFieldnombre.getText();
            if(id_categoria.equals("") || nombrecategoria.equals("")){
                JOptionPane.showMessageDialog(null, "No hay contratista por modificar o faltan datos.");
                return;
            }else{
                if(jComboBoxTipoContr.getSelectedIndex()==0){
                    JOptionPane.showMessageDialog(null, "Seleccione el tipo de contratista.");                    
                }else{
                    String tipocontr = jComboBoxTipoContr.getSelectedItem().toString();
                    if (contNegocio.update(id_categoria, tipocontr, nombrecategoria)) {
                        actualizar();
                        JOptionPane.showMessageDialog(null, "Se ha modificado la categoria.");
                        limpiarCampos();
                    } else {
                        JOptionPane.showMessageDialog(null, "No se pudo modificar la categoria.");
                    }
                }
            }
        }else{
            jTextFieldID.setEditable(true);
            jTextFieldnombre.setEditable(true);
            return;
        }
        
        
    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiarCampos();
        actualizar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void jButtonAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtrasActionPerformed
        mP.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonAtrasActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton jButtonAgregar;
    private javax.swing.JButton jButtonAtras;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JComboBox<String> jComboBoxTipoContr;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldID;
    private javax.swing.JTextField jTextFieldnombre;
    private javax.swing.JLabel lblubicaciones;
    // End of variables declaration//GEN-END:variables

    public void actualizar(){
        rs=contNegocio.getDataSet();
        actualizarTabla(rs);
    }
    
    public void actualizarTabla(ResultSet rs){
        try{
            cleanJTable();
            int i = 0;
            while (rs.next()) {
                jTable1.setValueAt(rs.getString(1), i, 0);   
                jTable1.setValueAt(rs.getString(2), i, 1);                   
                jTable1.setValueAt(rs.getString(3), i, 2);   
                i++;
            }
            if(i==0)
                JOptionPane.showMessageDialog(null, "No hay datos por mostrar."); 

        }catch(SQLException se) {
            se.printStackTrace();
        }
    }
    
    public void cleanJTable(){
        for(int i=0 ; i<jTable1.getRowCount() ; i++){
            for(int j=0 ; j<jTable1.getColumnCount() ; j++){
                jTable1.setValueAt("", i, j);
            }
        }
    }

    public boolean validarQueSePuedeBuscar(){
        jComboBoxTipoContr.setSelectedIndex(0);
        if(jTextFieldID.isEditable()){
            jTextFieldID.setText("");
            jTextFieldID.setEditable(false);
            return false;
        }
        if(!jTextFieldnombre.isEditable()){
            jTextFieldnombre.setEditable(true);
            return false;
        }
        
        if(jTextFieldnombre.getText().equals("")){
            JOptionPane.showMessageDialog(null, "No se pudo buscar el contratista, el campo Nombre de contratista está vacío."); 
            return false;
        }
        return true;
    }
    
    public boolean validarQueSePuedeGuardar(){
        
        if(!jTextFieldID.isEditable() || !jTextFieldnombre.isEditable()){
            jTextFieldID.setText("");
            jTextFieldID.setEditable(true);
            jTextFieldnombre.setEditable(true);
            return false;
        }
        if(jTextFieldID.getText().equals("") || jTextFieldnombre.getText().equals("")){
            JOptionPane.showMessageDialog(null, "No se pudo guardar el contratista, falta uno de los campos."); 
            return false;
        }
        if(jComboBoxTipoContr.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(null, "El campo Tipo de "
                    + "contratista no ha sido seleccionado."); 
            return false;
        }
        
        return true;
    }
    
    public void limpiarCampos() {
        jTextFieldID.setText("");
        jTextFieldnombre.setText("");
        jTextFieldnombre.setEditable(false);
        jTextFieldID.setEditable(false);
        jComboBoxTipoContr.setSelectedIndex(0);
        actualizar();
    }
    
    public void cargarTiposContrEnCbx(){
        ResultSet rs = contNegocio.retrieveTipoContr();
        try {
            while (rs.next()) {
                jComboBoxTipoContr.addItem(rs.getString(1));
            }
        } catch (SQLException se) {
            se.printStackTrace();
        }
    }

    
}
